
******* Common

000001  /*
000002  
000003                                          
000004     M   M   EEEEE   M   M   L        OOO     GGG       H   H
000005     MM MM   E       MM MM   L       O   O   G   G      H   H
000006     M M M   E       M M M   L       O   O   G          H   H
000007     M M M   EEEE    M M M   L       O   O   G          HHHHH
000008     M   M   E       M   M   L       O   O   G GGG      H   H
000009     M   M   E       M   M   L       O   O   G   G  ..  H   H
000010     M   M   EEEEE   M   M   LLLLL    OOO     GGGG  ..  H   H
000011  
000012  
000013  
000014  
000015    Modification History
000016  
000017    Date    Programmer          Modification
000018  --------  ------------------- -----------------------------------------------
000019  93/11/10  Pat Ireland         ORIGINAL
000020  93/12/23  Pat Ireland         Add #define LOG_IMAN_CI_INFO & struct
000021  94/01/11  Pat Ireland         Add #define LOG_IMAN_RELEASE
000022  94/01/18  Pat Ireland         Add usPICISequence to MEM_LOG_IMAGE_READY &
000023                                   add LOG_IMAN_POINT & struct
000024  94/01/27  Pat Ireland         Add LOG_IMAN_RELEASE & struct
000025  94/01/28  Pat Ireland         Add support for FILS logging
000026  94/02/03  Pat Ireland         Add #define LOG_FILS_POINT, LOG_FILS_NEXT/LAST
000027  94/02/10  Pat Ireland         Add usImagesQueued to MEM_LOG_IMAGE_READY
000028  94/02/15  Pat Ireland         Add LOG_IMAN_THROTTLE & struct
000029  94/02/24  Pat Ireland         Add LOG_IMAN_DOC_HOLD & struct
000030  94/03/29  Pat Ireland         Add LOG_IMAN_OBJECT & struct
000031  94/09/01  Pat Ireland         Update LOG_THROTTLE
000032  94/10/06  Pat Ireland         Add LOG_IMAN_DRIVER_MSG & struct
000033  96/05/22  Pat Ireland         Support for new IMAN memory management

******* Only in  \projects\edsl\h\memlog.h

000034  97/04/10  Pat Ireland         Support for IMONDIAG
000035  97/05/05  Brian Johnson       Ported to Win NT 4.x

******* Common

000034  
000035  */
000036  

******* Only in  \buic\inc\MEMLOG.H

000037  #if ! defined(INCL_MEMLOG_H)
000038  

******* Only in  \projects\edsl\h\memlog.h

000039  #ifndef INCL_MEMLOG_H

******* Common

000039  #define INCL_MEMLOG_H
000040  

******* Only in  \buic\inc\MEMLOG.H

000041  #define LOG_BANK_COUNT         4

******* Only in  \projects\edsl\h\memlog.h

000042  #ifndef  MEMLOGDLL
000043  #define  MEMLOGDLL      DLLIMPORT
000044  #endif
000045  
000046  #if defined(__cplusplus)

******* Moved in  \projects\edsl\h\memlog.h

000047  extern "C" {

******* Only in  \projects\edsl\h\memlog.h

000048  #endif
000049  
000050  #ifndef APIRET
000051  #define APIRET DWORD
000052  #endif
000053  
000054  typedef PVOID  *PPVOID;
000055  
000056  #define LOG_BANK_COUNT         4        // Must be power of two

******* Common

000042  #define LOG_BANK_CAPACITY      262144

******* Only in  \buic\inc\MEMLOG.H

000043  
000044  #define IMAN_MEMORY_NAME       "\\SHAREMEM\\IMANMEM.MEM"
000045  #define IAPP_MEMORY_NAME       "\\SHAREMEM\\IAPPMEN.MEM"
000046  #define FILS_MEMORY_NAME       "\\SHAREMEM\\FILSMEN.MEM"
000047  
000048  #define IMAN_MEMORY_SEMAPHORE  "\\SEM32\\PWIIMAN.SEM"
000049  #define IAPP_MEMORY_SEMAPHORE  "\\SEM32\\PWIIAPP.SEM"
000050  #define FILS_MEMORY_SEMAPHORE  "\\SEM32\\PWIFILS.SEM"

******* Only in  \projects\edsl\h\memlog.h

000058  #define LOG_MEMORY_SIZE        (LOG_BANK_COUNT * LOG_BANK_CAPACITY)
000059  #define SEMAPHORE_TIMEOUT      5000 // Semaphore wait timeout
000060  
000061  #define IMAN_MEMORY_NAME       "IMANMEMORYLOGMEMORY"
000062  #define IAPP_MEMORY_NAME       "IAPPMEMORYLOGMEMORY"
000063  #define FILS_MEMORY_NAME       "FILSMEMORYLOGMEMORY"
000064  #define IMON_MEMORY_NAME       "IMONMEMORYLOGMEMORY"
000065  #define RAMIT_MEMORY_NAME      "RAMITMEMORYLOGMEMORY"
000066  
000067  #define IMAN_SEM_NAME          "IMANMEMORYLOGSEMAPHORE"
000068  #define IAPP_SEM_NAME          "IAPPMEMORYLOGSEMAPHORE"
000069  #define FILS_SEM_NAME          "FILSMEMORYLOGSEMAPHORE"
000070  #define IMON_SEM_NAME          "IMONMEMORYLOGSEMAPHORE"
000071  #define RAMIT_SEM_NAME         "RAMITMEMORYLOGSEMAPHORE"

******* Common

000051  
000052  #define IMAN_LOGGING           "LOGGING"
000053  #define IAPP_LOGGING           "LOGGING"
000054  #define FILS_LOGGING           "LOGGING"

******* Only in  \projects\edsl\h\memlog.h

000076  #define IMON_LOGGING           "LOGGING"
000077  #define RAMIT_LOGGING          "LOGGING"

******* Common

000055  
000056  #define LOGGING_ENABLED        "ENABLED"
000057  #define LOGGING_DISABLED       "DISABLED"
000058  
000059  #define IMAN_MEMORY_LOG        0
000060  #define IAPP_MEMORY_LOG        1
000061  #define FILS_MEMORY_LOG        2

******* Only in  \buic\inc\MEMLOG.H

000062  #define LAST_MEMORY_LOG        2

******* Only in  \projects\edsl\h\memlog.h

000085  #define IMON_MEMORY_LOG        3
000086  #define RAMIT_MEMORY_LOG       4
000087  #define LAST_MEMORY_LOG        4
000088  
000089  #define MEMORY_LOG_CHANNELS    (LAST_MEMORY_LOG + 1)

******* Common

000063  
000064  typedef
000065      struct
000066          {
000067          ULONG                  ulCurrentBank;
000068          ULONG                  aulCurrentSize [ LOG_BANK_COUNT ];

******* Only in  \buic\inc\MEMLOG.H

000069          BYTE                   abMemoryLog [ LOG_BANK_COUNT *
000070                                               LOG_BANK_CAPACITY ];

******* Only in  \projects\edsl\h\memlog.h

000096          BYTE                   abMemoryLog    [ LOG_MEMORY_SIZE ];

******* Common

000071          }   MEMORY_LOG, MEMLOG, * PMEMLOG;
000072  
000073  typedef
000074      struct
000075          {
000076          BYTE                   bCommand;
000077          BYTE                   bLength;
000078          }   MEMORY_LOG_HEADER, MEMLOGHDR, MLH, *PMLH, * PMEMLOGHDR;
000079  
000080  typedef
000081      struct
000082          {
000083          ULONG                  ulTimeStamp;
000084          ULONG                  ulSequenceNumber;
000085          MLH                    MemLogHeader;
000086          BYTE                   abData [ 1 ];
000087          }   MEMORY_LOG_ENTRY, MEMLOGENTRY, MLE, *PMLE, *PMEMLOGENTRY;
000088  
000089  #if defined(MEMLOGACCESS)
000090  

******* Only in  \buic\inc\MEMLOG.H

000091  static char                   *apszMemoryNames [ 3 ] =

******* Only in  \projects\edsl\h\memlog.h

000117  // This portion must be defined in a single file only
000118  // NOTE that this mechanism depends on having per-process data instances !
000119  
000120  static char                    *apszMemoryNames [ MEMORY_LOG_CHANNELS ] =

******* Common

000092      {
000093      IMAN_MEMORY_NAME,
000094      IAPP_MEMORY_NAME,

******* Only in  \buic\inc\MEMLOG.H

000095      FILS_MEMORY_NAME
000096      };
000097  
000098  static char                   *apszMemoryLogSemaphoreName [ 3 ] =
000099      {
000100      IMAN_MEMORY_SEMAPHORE,
000101      IAPP_MEMORY_SEMAPHORE,
000102      FILS_MEMORY_SEMAPHORE
000103      };
000104  
000105  static PMEMLOG                 apCreateMemoryAreas [ 3 ] =
000106      {
000107      (PMEMLOG) NULL,
000108      (PMEMLOG) NULL,
000109      (PMEMLOG) NULL
000110      };
000111  
000112  static PMEMLOG                 apAccessMemoryAreas [ 3 ] =
000113      {
000114      (PMEMLOG) NULL,
000115      (PMEMLOG) NULL,
000116      (PMEMLOG) NULL
000117      };
000118  
000119  static HMTX                    ahmtxMemorySemaphores [ 3 ];
000120  
000121  static ULONG                   aulSequenceNumber [ 3 ] =
000122      {
000123      0,
000124      0,
000125      0
000126      };
000127  
000128  #endif
000129  
000130  #if defined (__CPLUSPLUS)
000131  

******* Moved in  \buic\inc\MEMLOG.H

000132  extern "C" {

******* Only in  \buic\inc\MEMLOG.H

000133  
000134  #endif
000135  
000136  APIRET APIENTRY AccessMemoryLogger
000137  

******* Only in  \projects\edsl\h\memlog.h

000124      FILS_MEMORY_NAME,
000125      IMON_MEMORY_NAME,
000126      RAMIT_MEMORY_NAME
000127      };
000128  
000129  static char                    *apszSemaphoreNames [ MEMORY_LOG_CHANNELS ] =
000130      {
000131      IMAN_SEM_NAME,
000132      IAPP_SEM_NAME,
000133      FILS_SEM_NAME,
000134      IMON_SEM_NAME,
000135      RAMIT_SEM_NAME
000136      };
000137  
000138  static HANDLE                  hMapObject = NULL;
000139  
000140  static PMEMLOG                 pMemoryArea = (PMEMLOG) NULL;
000141  
000142  static USHORT                  usAccessMemoryHandle   = (USHORT)(-1);
000143  
000144  static HANDLE                  hMemorySemaphoreObject = NULL;
000145  
000146  static ULONG                   ulSequenceNumber = 0;
000147  
000148  #endif
000149  
000150  
000151  
000152  MEMLOGDLL APIRET WINAPI AccessMemoryLogger

******* Common

000138      (USHORT                    usMemoryHandle);
000139  

******* Only in  \buic\inc\MEMLOG.H

000140  APIRET APIENTRY InitializeMemoryLogger
000141  

******* Only in  \projects\edsl\h\memlog.h

000155  MEMLOGDLL APIRET WINAPI InitializeMemoryLogger

******* Common

000142      (USHORT                     usMemoryHandle,
000143       PPVOID                     ppMemoryArea);
000144  

******* Only in  \buic\inc\MEMLOG.H

000145  APIRET APIENTRY WriteMemoryLogger
000146  

******* Only in  \projects\edsl\h\memlog.h

000159  MEMLOGDLL APIRET WINAPI WriteMemoryLogger

******* Common

000147      (USHORT                     usMemoryHandle,
000148       PMLH                       EntryToLog);
000149  

******* Only in  \buic\inc\MEMLOG.H

000150  #if defined (__CPLUSPLUS)
000151  

******* Moved in  \buic\inc\MEMLOG.H

000152  }

******* Only in  \buic\inc\MEMLOG.H

000153  
000154  #endif

******* Only in  \projects\edsl\h\memlog.h

000163  

******* Common

000155  
000156  typedef
000157      struct
000158          {
000159          MLH                    MemLogHeader;
000160          RQM                    QueueEntry;
000161          }   MEMORY_LOG_QUEUE;
000162  
000163  typedef
000164      struct
000165          {
000166          MLH                    MemLogHeader;
000167          USHORT                 usHostCommand;
000168          USHORT                 usHostPacketCount;
000169          USHORT                 usHostRetryCount;
000170          }   MEMORY_LOG_HOST_MSG;
000171  
000172  typedef
000173      struct
000174          {
000175          MLH                    MemLogHeader;
000176          USHORT                 usRow;
000177          USHORT                 usCol;
000178          USHORT                 usRoutine;
000179          RQM                    QueueEntry;
000180          }   MEMORY_LOG_STATE;
000181  
000182  typedef
000183      struct
000184          {
000185          MLH                    MemLogHeader;
000186          BYTE                   bDocID;
000187          BYTE                   bCol;
000188          USHORT                 usRow;
000189          USHORT                 usRoutine;
000190          }   MEMORY_LOG_DOC_STATE;
000191  
000192  typedef
000193      struct
000194          {
000195          MLH                    MemLogHeader;
000196          USHORT                 usRow;
000197          USHORT                 usCol;
000198          USHORT                 usRoutine;
000199          }   MEMORY_LOG_ROUTINE;
000200  
000201  typedef
000202      struct
000203          {
000204          MLH                    MemLogHeader;
000205          ULONG                  ulTotalSize;
000206          ULONG                  ulDetailDataSize;
000207          ULONG                  ulFrontImageSize;
000208          ULONG                  ulBackImageSize;
000209          }   MEMORY_LOG_DOCUMENT;
000210  
000211  typedef
000212      struct
000213          {
000214          MLH                    MemLogHeader;
000215          BYTE                   bDocID;
000216          BYTE                   bFiller;
000217          }   MEMORY_LOG_DOC_ID;
000218  
000219  typedef
000220      struct
000221          {
000222          MLH                    MemLogHeader;
000223          USHORT                 usTrackerSequence;
000224          USHORT                 usImageCount;
000225          USHORT                 usCurrentSequence;
000226          }   MEMORY_LOG_DOC_HOLD;
000227  
000228  typedef
000229      struct
000230          {
000231          MLH                    MemLogHeader;
000232          ULONG                  ulCommitSize;
000233          ULONG                  ulNextAvailableByte;
000234          BYTE                   bDocID;
000235          BYTE                   bFiller;
000236          }   MEMORY_LOG_RELEASE;
000237  
000238  typedef
000239      struct
000240          {
000241          MLH                    MemLogHeader;
000242          ULONG                  ulTime;
000243          USHORT                 usSeq;
000244          USHORT                 usIns;
000245          BYTE                   bDocID;
000246          BYTE                   bFiller;
000247          }   MEMORY_LOG_2IAPP;
000248  
000249  typedef
000250      struct
000251          {
000252          MLH                    MemLogHeader;
000253          BYTE                   bEventID;

******* Only in  \buic\inc\MEMLOG.H

000254          BYTE                   bFiller;

******* Common

000255          }   MEMORY_LOG_EVENT;
000256  
000257  typedef
000258      struct
000259          {
000260          MLH                    MemLogHeader;

******* Only in  \projects\edsl\h\memlog.h

000269          BYTE                    bEventID;
000270          BYTE                    bSideID;
000271          }   MEMORY_LOG_SIDE_EVENT;
000272  
000273  typedef
000274      struct
000275          {
000276          MLH                     MemLogHeader;

******* Common

000261          ULONG                  ulData;
000262          USHORT                 usData;
000263          BYTE                   bData;
000264          BYTE                   bFiller;
000265          }   MEMORY_LOG_POINT;
000266  
000267  typedef
000268      struct
000269          {
000270          MLH                    MemLogHeader;
000271          char                   acCFSLast [ 16 ];
000272          }    MEMORY_LOG_CFSL;
000273  
000274  typedef
000275      struct
000276          {
000277          MLH                    MemLogHeader;

******* Only in  \projects\edsl\h\memlog.h

000294          BYTE                    bSideID;
000295          char                    szDeviceName [ 9 ];
000296          }   MEMORY_LOG_DEVICE;
000297  
000298  typedef
000299      struct
000300          {
000301          MLH                     MemLogHeader;

******* Common

000278          ULONG                  ulAddr;
000279          BYTE                   bAddrType;

******* Only in  \buic\inc\MEMLOG.H

000280          BYTE                   bFiller;

******* Only in  \projects\edsl\h\memlog.h

000304          BYTE                    bSideID;

******* Common

000281          }   MEMORY_LOG_ADDR;
000282  
000283  typedef
000284      struct
000285          {
000286          MLH                    MemLogHeader;
000287          BYTE                   bEntryCompressor;
000288          BYTE                   bEntryIAPP;
000289          BYTE                   bEntryActive;
000290          BYTE                   bEntryRelease;
000291          BYTE                   bEntryConsume;
000292          BYTE                   bEntryCopySize;
000293          BYTE                   bThrottleCompressor;
000294          BYTE                   bThrottleIAPP;
000295          BYTE                   bThrottleActive;
000296          BYTE                   bThrottleRelease;
000297          BYTE                   bThrottleConsume;
000298          BYTE                   bThrottleCopySize;
000299          BYTE                   bReply;
000300          BYTE                   bFiller;
000301          }   MEMORY_LOG_THROTTLE;
000302  
000303  typedef
000304      struct
000305          {
000306          MLH                    MemLogHeader;
000307          USHORT                 usImageID;
000308          USHORT                 usTrackerSequence;
000309          USHORT                 usImagesQueued;
000310          BYTE                   bDocID;

******* Only in  \buic\inc\MEMLOG.H

000311          BYTE                   bFiller;

******* Only in  \projects\edsl\h\memlog.h

000335          BYTE                    bSideID;

******* Common

000312          }   MEMORY_LOG_IMG_READY;
000313  
000314  typedef
000315      struct
000316          {
000317          MLH                    MemLogHeader;
000318          BYTE                   bDocID;

******* Only in  \buic\inc\MEMLOG.H

000319          BYTE                   bCommand;

******* Only in  \projects\edsl\h\memlog.h

000343          BYTE                    bSideID;

******* Common

000320          ULONG                  ulRawSize;
000321          ULONG                  ulRawAddr;
000322          ULONG                  ulCompSize;
000323          ULONG                  ulCompAddr;
000324          }   MEMORY_LOG_FETCH_IMG;
000325  
000326  typedef
000327      struct
000328          {
000329          MLH                    MemLogHeader;
000330          ULONG                  ulRawSize;
000331          ULONG                  ulRawAddr;
000332          ULONG                  ulCompSize;
000333          ULONG                  ulCompAddr;
000334          ULONG                  ulCompStart;
000335          ULONG                  ulCompStop;

******* Only in  \projects\edsl\h\memlog.h

000360          BYTE                    bSideID;
000361          BYTE                    bFIller;

******* Common

000336          }   MEMORY_LOG_CI_INFO;
000337  
000338  typedef
000339      struct
000340          {
000341          MLH                     MemLogHeader;
000342          ULONG                   ulDocAddr;
000343          BYTE                    bDocID;
000344          BYTE                    bFiller;
000345          }  MEMORY_LOG_DISK_ACCESS, *PMLDA;
000346  
000347  typedef
000348      struct
000349          {
000350          MLH                    MemLogHeader;
000351          ULONG                  ulDocumentArrivalTime;
000352          USHORT                 usDocumentArrivalSequence;
000353          USHORT                 usDocumentInsertionSequence;
000354          } MEMORY_LOG_UNIQUE_ID, *PMLUI;
000355  
000356  typedef
000357      struct
000358          {
000359          MLH                    MemLogHeader;
000360          RQM                    QueueEntry;
000361          LONG                   lThreadArg;

******* Only in  \buic\inc\MEMLOG.H

000362          }   MEMORY_LOG_QUEUE_1, *PMLQ1;
000363  
000364  typedef
000365      struct
000366          {
000367          MLH                    MemLogHeader;
000368          USHORT                 usStatus;

******* Only in  \projects\edsl\h\memlog.h

000388          }   MEMORY_LOG_DISK_THREAD, *PMLDISKTHRD;
000389  
000390  typedef
000391      struct
000392          {
000393          MLH                     MemLogHeader;
000394          APIRET                  Status;

******* Common

000369          }   MEMORY_LOG_MSG;
000370  
000371  typedef
000372      struct
000373          {
000374          MLH                    MemLogHeader;
000375          BYTE                   bObjectType;
000376          BYTE                   bDocID;
000377          USHORT                 usObjectLength;
000378          }   MEMORY_LOG_OBJECT;
000379  
000380  typedef
000381      struct
000382          {
000383          MLH                    MemLogHeader;
000384          ULONG                  ulBaseAddress;
000385          ULONG                  ulCurrentCommit;
000386          ULONG                  ulCommitDelta;
000387          ULONG                  ulNewAddress;
000388          BYTE                   bDocID;
000389          BYTE                   bDirection;
000390          BYTE                   bLocation;
000391          BYTE                   bFiller;
000392          }   MEMORY_LOG_DOS_SET_MEM;
000393  
000394  typedef
000395      struct
000396          {
000397          MLH                    MemLogHeader;
000398          ULONG                  ulBaseAddress;
000399          ULONG                  ulCommitSize;
000400          ULONG                  ulReturnSize;
000401          ULONG                  ulReturnFlag;
000402          BYTE                   bDocID;
000403          BYTE                   bLocation;
000404          }   MEMORY_LOG_QUERY_MEM;
000405  
000406  typedef
000407      struct
000408          {
000409          MLH                    MemLogHeader;
000410          USHORT                 usStateRow;
000411          USHORT                 usStateRoutine;
000412          USHORT                 usDriverCommand;
000413          BYTE                   bCommand;

******* Only in  \buic\inc\MEMLOG.H

000414          BYTE                   bFiller;

******* Only in  \projects\edsl\h\memlog.h

000440          BYTE                    bSideID;

******* Common

000415          }   MEMORY_LOG_DRIVER_MSG;
000416  
000417  typedef
000418      struct
000419          {
000420          MLH                    MemLogHeader;
000421          ULONG                  ulDocAddress;
000422          USHORT                 usQueueHead;
000423          USHORT                 usQueueTail;
000424          USHORT                 usQueueCount;
000425          BYTE                   bDocID;
000426          }   MEMORY_LOG_DOC_MEM_MSG;
000427  
000428  
000429  typedef
000430      struct
000431          {
000432          MLH                    MemLogHeader;
000433          BYTE                 * pbOffset;
000434          USHORT                 usCount;
000435          BYTE                   bDocID;
000436          }   MEMORY_LOG_QUEUE_DOC;
000437  
000438  typedef
000439      struct
000440          {
000441          MLH                    MemLogHeader;
000442          BYTE                 * pbDocHdr;
000443          BYTE                   bDocID;
000444          }   MEMORY_LOG_DOC_ADDR;
000445  
000446  typedef
000447      struct
000448          {
000449          MLH                    MemLogHeader;
000450          USHORT                 usDetailLength;
000451          BYTE                   bDocID;
000452          BYTE                   bQueueSlot;
000453          BYTE                   bQueueCount;
000454          }   MEMORY_LOG_EDSL_2IMAN;
000455  
000456  typedef
000457      struct
000458          {
000459          MLH                    MemLogHeader;
000460          USHORT                 usDetailLength;
000461          BYTE                   bDocID;
000462          }   MEMORY_LOG_EDSL_CAPTURE;
000463  
000464  #define LOG_IMAN_QUEUE         0
000465  #define LOG_IMAN_FRONT_IMG     1
000466  #define LOG_IMAN_BACK_IMG      2
000467  #define LOG_IMAN_FETCH_IMG     3
000468  #define LOG_IMAN_IMG_READY     4
000469  #define LOG_IMAN_EVENT         5

******* Only in  \buic\inc\MEMLOG.H

000470  #define LOG_IMAN_ADDR          6
000471  #define LOG_IMAN_CI_INFO       7
000472  #define LOG_IMAN_2IAPP         8
000473  #define LOG_IMAN_POINT         9
000474  #define LOG_IMAN_HOST_MSG      10
000475  #define LOG_IMAN_RELEASE       11
000476  #define LOG_IMAN_DOC_STATE     12
000477  #define LOG_IMAN_THROTTLE      13
000478  #define LOG_IMAN_DOC_HOLD      14
000479  #define LOG_IMAN_OBJECT        15
000480  #define LOG_IMAN_DOS_SET_MEM   16
000481  #define LOG_IMAN_QUERY_MEM     17
000482  #define LOG_IMAN_DRIVER_MSG    18
000483  #define LOG_IMAN_GET_DOC_MEM   19    // Get new space
000484  #define LOG_IMAN_FREE_DOC_MEM  20    // Release existing space
000485  #define LOG_IMAN_DOC_ADDR      21
000486  

******* Only in  \projects\edsl\h\memlog.h

000496  #define LOG_IMAN_SIDE_EVENT      6
000497  #define LOG_IMAN_ADDR            7
000498  #define LOG_IMAN_CI_INFO         8
000499  #define LOG_IMAN_2IAPP           9
000500  #define LOG_IMAN_POINT          10
000501  #define LOG_IMAN_HOST_MSG       11
000502  #define LOG_IMAN_RELEASE        12
000503  #define LOG_IMAN_DOC_STATE      13
000504  #define LOG_IMAN_THROTTLE       14
000505  #define LOG_IMAN_DOC_HOLD       15
000506  #define LOG_IMAN_OBJECT         16
000507  #define LOG_IMAN_DOS_SET_MEM    17
000508  #define LOG_IMAN_QUERY_MEM      18
000509  #define LOG_IMAN_DRIVER_MSG     19
000510  #define LOG_IMAN_GET_DOC_MEM    20
000511  #define LOG_IMAN_FREE_DOC_MEM   21
000512  #define LOG_IMAN_DOC_ADDR       22
000513  #define LOG_IMAN_DEVICE         23

******* Common

000487  
000488  #define EVENT_IMAGE_OPEN       0

******* Only in  \buic\inc\MEMLOG.H

000489  #define EVENT_IMAGE_CLOSE      1
000490  #define EVENT_IMAGE_WRITE      2
000491  #define EVENT_IMAGE_READ       3
000492  #define EVENT_IMAGE_START      4
000493  #define EVENT_IMAGE_CONFIGURE  5
000494  #define EVENT_IMAGE_ARM        6
000495  #define EVENT_IMAGE_DISARM     7
000496  #define EVENT_IMAGE_RESET      8
000497  #define EVENT_IMAGE_COMMAND    9
000498  #define EVENT_IMAGE_PROCESS    10
000499  #define EVENT_IMAGE_IMAGE      11
000500  #define EVENT_ALACRON_OPEN     12
000501  #define EVENT_ALACRON_CLOSE    13
000502  #define EVENT_ALACRON_DEV      14
000503  #define EVENT_ALACRON_MAPLOAD  15
000504  #define EVENT_ALACRON_ADDR     16
000505  #define EVENT_ALACRON_CALL     17
000506  #define EVENT_ALACRON_GET      18
000507  

******* Only in  \projects\edsl\h\memlog.h

000516  #define EVENT_CI_OPEN            1
000517  #define EVENT_GET_MSG_OPEN       2
000518  #define EVENT_PUT_MSG_OPEN       3
000519  #define EVENT_START_OPEN         4
000520  
000521  #define EVENT_GET_MSG            5
000522  #define EVENT_PUT_MSG            6
000523  
000524  #define EVENT_ALACRON_OPEN       7
000525  #define EVENT_ALACRON_CLOSE      8
000526  #define EVENT_ALACRON_DEV        9
000527  #define EVENT_ALACRON_MAPLOAD   10
000528  #define EVENT_ALACRON_ADDR      11
000529  #define EVENT_ALACRON_CALL      12
000530  #define EVENT_ALACRON_GET       13
000531  #define EVENT_ALACRON_START     14
000532  
000533  #define EVENT_IMAGE_WRITE       15
000534  #define EVENT_IMAGE_READ        16
000535  #define EVENT_IMAGE_CONFIGURE   17
000536  #define EVENT_IMAGE_ARM         18
000537  #define EVENT_IMAGE_DISARM      19
000538  #define EVENT_IMAGE_RESET       20
000539  #define EVENT_IMAGE_COMMAND     21
000540  #define EVENT_IMAGE_PROCESS     22
000541  #define EVENT_IMAGE_IMAGE       23
000542  #define EVENT_IMAGE_SHUTDOWN    24
000543  
000544  #define EVENT_IAPP_STOP         25

******* Common

000508  
000509  #define ADDR_MAIN_VIRTUAL      0
000510  #define ADDR_READY_VIRTUAL     1
000511  #define ADDR_READY_PHYSICAL    2
000512  #define ADDR_ANCHOR_PHYSICAL   3
000513  #define ADDR_VERSION_PHYSICAL  4

******* Only in  \projects\edsl\h\memlog.h

000551  #define ADDR_EBT_TABLE           5
000552  #define ADDR_LUT_TABLE           6

******* Common

000514  
000515  #define EXPAND_SETMEM          0
000516  #define CONTRACT_SETMEM        1
000517  
000518  #define MEMSET_CONSUMED        1
000519  #define MEMSET_TAIL            2
000520  #define MEMSET_RELEASE         3
000521  #define MEMSET_IMAGE           4
000522  
000523  #define MEMQUERY_FETCH         1
000524  #define MEMQUERY_PRE_SHRINK    2
000525  #define MEMQUERY_POST_SHRINK   3
000526  
000527  #if defined (IMANDIAG_PROGRAM)
000528  
000529  static char                   *pszIMANCommandNames [ ] =
000530  
000531      {
000532      "STATE",
000533      "FTIMG",
000534      "BCKIM",
000535      "FETCH",
000536      "READY",
000537      "EVENT",

******* Only in  \projects\edsl\h\memlog.h

000577      "EVSID",

******* Common

000538      "ADDR ",
000539      "CI   ",
000540      "2IAPP",
000541      "POINT",
000542      "HOST ",
000543      "RELEA",
000544      "DOC  ",
000545      "THROT",
000546      "HOLD ",
000547      "OBJ  ",
000548      "MSET ",
000549      "QMEM ",
000550      "DRMSG",
000551      "GETDM",
000552      "FREDM",

******* Only in  \buic\inc\MEMLOG.H

000553      "DOCAR"

******* Only in  \projects\edsl\h\memlog.h

000593      "DOCAR",
000594      "DEVIC"

******* Common

000554      };
000555  
000556  static char                   *pszIMANEventNames [ ] =
000557      {

******* Only in  \buic\inc\MEMLOG.H

000558      "IMAGE OPEN",
000559      "IMAGE CLOSE",

******* Only in  \projects\edsl\h\memlog.h

000599      "IMAGE OPEN",        // Side sensitive
000600      "CI OPEN",           // Side sensitive
000601      "GET MSG OPEN",      // Side sensitive
000602      "PUT MSG OPEN",      // Side sensitive
000603      "START OPEN",        // Side sensitive
000604  
000605      "GET MSG",           // Side sensitive
000606      "PUT MSG",           // Side sensitive
000607  
000608      "ALACRON OPEN",      // Side sensitive
000609      "ALACRON CLOSE",     // Side sensitive
000610      "ALACRON DEV",       // Side sensitive
000611      "ALACRON MAPLOAD",   // Side sensitive
000612      "ALACRON ADDR",      // Side sensitive
000613      "ALACRON CALL",      // Side sensitive
000614      "ALACRON GET",       // Side sensitive
000615      "ALACRON START",     // Side sensitive
000616  

******* Common

000560      "IMAGE WRITE",
000561      "IMAGE READ",

******* Only in  \buic\inc\MEMLOG.H

000562      "IMAGE START",

******* Common

000563      "IMAGE CONFIGURE",
000564      "IMAGE ARM",
000565      "IMAGE DISARM",
000566      "IMAGE RESET",
000567      "IMAGE COMMAND",
000568      "IMAGE PROCESS",
000569      "IMAGE IMAGE",

******* Only in  \buic\inc\MEMLOG.H

000570      "ALACRON OPEN",
000571      "ALACRON CLOSE",
000572      "ALACRON DEV",
000573      "ALACRON MAPLOAD",
000574      "ALACRON ADDR",
000575      "ALACRON CALL",
000576      "ALACRON GET"

******* Only in  \projects\edsl\h\memlog.h

000626      "IMAGE SHUTDOWN",
000627  
000628      "IAPP STOP"

******* Common

000577      };
000578  
000579  static char                   *pszIMANAddrNames [ ] =

******* Only in  \projects\edsl\h\memlog.h

000632  

******* Common

000580      {
000581      "MAIN VIRTUAL",
000582      "READY VIRTUAL",
000583      "READY PHYSICAL",
000584      "ANCHOR PHYSICAL",

******* Only in  \buic\inc\MEMLOG.H

000585      "VERSION PHYSICAL"
000586      };
000587  
000588  #endif
000589  
000590  

******* Only in  \projects\edsl\h\memlog.h

000638      "VERSION PHYSICAL",
000639      "EBT TABLE",
000640      "LUT TABLE"
000641      };
000642  
000643  #endif

******* Common

000591  
000592  #define LOG_IAPP_QUEUE            0
000593  #define LOG_IAPP_DISK_WRITE       1
000594  #define LOG_IAPP_DISK_READ        2
000595  #define LOG_DISK_CONTROL_QUEUE    3
000596  #define LOG_UNIQUE_DOC_ID         4
000597  #define LOG_FILS_REQUEST_ID       5
000598  #define LOG_FILS_RETURN_ID        6
000599  #define LOG_NO_DOCUMENT_ON_DISK   7
000600  #define LOG_CURRENT_ID            8
000601  #define LOG_NEXT_ID               9
000602  #define LOG_WRITE_OFFSET          10
000603  #define LOG_2IMAN_QUEUE           11
000604  #define LOG_2IMON_QUEUE           12
000605  #define LOG_2FILS_QUEUE           13
000606  #define LOG_IMON_RETURN_ID        14
000607  #define LOG_QUEUE_IMAN_DOC        15
000608  #define LOG_DEQUEUE_IMAN_DOC      16
000609  #define LOG_IAPP_DOC_ADDR         17
000610  

******* Only in  \buic\inc\MEMLOG.H

000611  
000612  

******* Common

000613  #if defined (IAPPDIAG_PROGRAM)
000614  
000615  static char                   *pszIAPPCommandNames [ ] =
000616  
000617      {
000618      "QUEUE ",
000619      "DKWRIT",
000620      "DKREAD",
000621      "DKQUE ",
000622      "UNIDOC",
000623      "FSRQID",
000624      "FSRTID",
000625      "NODOCS",
000626      "CURRID",
000627      "NEXTID",
000628      "POWROF",
000629      "2IMANQ",
000630      "2IMONQ",
000631      "2FILSQ",
000632    	 "MORTID",
000633      "DOCQUE",
000634      "DOCDEQ", 
000635      "DOCADR" 
000636      };
000637  
000638  #endif
000639  
000640  
000641  
000642  #define LOG_FILS_QUEUE         0
000643  #define LOG_FILS_ROUTINE       1
000644  #define LOG_FILS_DOCUMENT      2
000645  #define LOG_FILS_POINT         3
000646  #define LOG_FILS_LAST          4
000647  #define LOG_FILS_NEXT          5
000648  #define LOG_FILS_CFSL          6
000649  
000650  
000651  
000652  #if defined (FILSDIAG_PROGRAM)
000653  
000654  static char                   *pszFILSCommandNames [ ] =
000655  
000656      {
000657      "QUEUE",
000658      "STATE",
000659      "DOC  ",
000660      "POINT",
000661      "LAST ",
000662      "NEXT ",
000663      "CFSL "
000664      };
000665  
000666  #endif
000667  
000668  
000669  

******* Only in  \projects\edsl\h\memlog.h

000721  #define LOG_IMON_QUEUE          0
000722  #define LOG_IMON_ROUTINE        1
000723  
000724  
000725  #if defined (IMONDIAG_PROGRAM)
000726  
000727  static char                     *pszIMONCommandNames [ ] =
000728  
000729      {
000730      "QUEUE",
000731      "STATE"
000732      };
000733  
000734  #endif
000735  
000736  
000737  

******* Common

000670  #if defined (EDSLDIAG_PROGRAM)
000671  
000672  #define LOG_EDSL_QUEUE          0
000673  #define LOG_EDSL_QUEUE_DETAIL   1
000674  #define LOG_EDSL_DEQUEUE_DETAIL 2
000675  #define LOG_EDSL_STOP           3
000676  #define LOG_EDSL_START          4
000677  #define LOG_EDSL_CAPTURE_DETAIL 5
000678  
000679  static char                  * pszEDSLCommandNames [ ] =
000680  
000681      {
000682      "QUEUE",
000683      "INDT ",
000684      "OUTDT",
000685      "STOP ",
000686      "START",
000687      "CAPDT"
000688      };
000689  
000690  #endif
000691  

******* Only in  \buic\inc\MEMLOG.H

000692  #endif
000693  

******* Only in  \projects\edsl\h\memlog.h

000760  #if defined (__cplusplus)

******* Moved in  \projects\edsl\h\memlog.h

000761  }

******* Only in  \projects\edsl\h\memlog.h

000762  #endif
000763  
000764  #endif

******* End - Files are different
